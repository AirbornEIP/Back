name: CI

on: [push, pull_request]

env:
  SONAR_PROJECT_KEY: airborn:back #! Never use space
  SONAR_PROJECT_NAME: Back        #! Never use space
  SONAR_PATH_SOURCES: .
  DOC_FILENAME: ./swagger.yaml

jobs:
  Test-Unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Installation of Dependencies
        run: npm install
      - name: Running Test
        run: npm run test_ci

  Build-App:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Installation of Dependencies
        run: npm install
      - name: Build Application
        run: npm run build

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Installation of Dependencies
        run: npm install
      - name: Coding Style
        run: npm run lint

  Doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check doc exist
        run: >
          if [ ! -f ${{ env.DOC_FILENAME }} ]; then
            exit 1;
          else
            exit 0;
          fi

  Notify-Dev:
    runs-on: ubuntu-latest
    needs:
      - Test-Unit
      - Build-App
      - Lint
      - Doc
    if: ${{ always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/devel' || github.ref == 'refs/heads/prod') }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Select Embed
        id: set_embed
        run: |
            if [[ ${{ needs.Test-Unit.result }} == "failure" ]]; then
                echo ::set-output name=json_var::'[ {"title": "üßª Github Action (${{ steps.extract_branch.outputs.branch }}):", "description": ":warning: @here Failure Test-Unitaire [Go check](https://github.com/AirbornEIP/Back/actions) :warning:", "url": "https://github.com/AirbornEIP/Back/actions", "color": 16711711} ]'

            elif [[ ${{ needs.Build-App.result }} == "failure" ]]; then
                echo ::set-output name=json_var::'[ {"title": "üßª Github Action (${{ steps.extract_branch.outputs.branch }}):", "description": ":warning: @here Failure Build-App [Go check](https://github.com/AirbornEIP/Back/actions) :warning:", "url": "https://github.com/AirbornEIP/Back/actions", "color": 16711711} ]'

            elif [[ ${{ needs.Lint.result }} == "failure" ]]; then
                echo ::set-output name=json_var::'[ {"title": "üßª Github Action (${{ steps.extract_branch.outputs.branch }}):", "description": ":warning: @here Failure EsLint [Go check](https://github.com/AirbornEIP/Back/actions) :warning:", "url": "https://github.com/AirbornEIP/Back/actions", "color": 16711711} ]'

            else
                echo ::set-output name=json_var::'[ {"title": "üßª Changement Back (${{ steps.extract_branch.outputs.branch }}):", "description": ":white_check_mark: All Tests Passed. :white_check_mark:", "url":"https://github.com/AirbornEIP/Back/actions", "color":52000} ]'
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/790686267851014204/Ax5deRmrE7GsTxoligDL5zfvYowdtbB10tb3Iar7jmSxsRuUvvvePdgXZKwY14Pj8-v6
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}

  Notify-Announce:
    runs-on: ubuntu-latest
    needs:
      - Test-Unit
      - Build-App
      - Lint
      - Doc
    if: ${{ always() && github.ref == 'refs/heads/main' }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Select Embed
        id: set_embed
        run: |
            if [[ ${{ needs.Test-Unit.result }} == "failure" ]]; then
                exit 1
            elif [[ ${{ needs.Build-App.result }} == "failure" ]]; then
                exit 1
            elif [[ ${{ needs.Lint.result }} == "failure" ]]; then
                exit 1
            else
                echo ::set-output name=json_var::'[ {"title": "üßª Changement Back (${{ steps.extract_branch.outputs.branch }}):", "description": ":white_check_mark: All Tests Passed. :white_check_mark:", "url":"https://github.com/AirbornEIP/Back/actions", "color":52000} ]'
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/880365677813334017/zRTToF1MRDvQXWGlB2T1kxePkXj8-ZsKgzW34sG_VuWz8TVBtO5KEGRYekxXUtb9dB-I
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}

  Sonarqube:
    runs-on: ubuntu-latest
    needs:
      - Test-Unit
      - Build-App
      - Lint
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
      - name: Installation of Dependencies
        run: npm install
      - name: Setup Sonar Tests
        run: npm run sonar
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
            args: >
              -Dsonar.verbose=true
              -Dsonar.sourceEncoding=UTF-8
              -Dsonar.sources=${{ env.SONAR_PATH_SOURCES }}
              -Dsonar.host.url=${{ secrets.SONAR_HOST }}
              -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}:${{ steps.extract_branch.outputs.branch }}
              -Dsonar.projectName=${{ env.SONAR_PROJECT_NAME }}-${{ steps.extract_branch.outputs.branch }}
              -Dsonar.eslint.eslintconfigpath=.eslintrc.json
              -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
              -Dsonar.testExecutionReportPaths=test-report.xml
              -Dsonar.coverage.exclusions=src/index.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Update-Doc:
    runs-on: ubuntu-latest
    needs:
      - Doc
    if: ${{ always() && github.ref == 'refs/heads/main' }}
    steps:
      - name: Updating Documentation
        run: |
          if [[ ${{ needs.Doc.result }} == "failure" ]]; then
            exit 1
          else
            curl http://20.199.97.36:14242/backDoc/pull -H "X-Authorization-Airborn: ${{ secrets.AUTH_TOKEN }}" -I -X GET --connect-timeout 300
          fi

  Notify-Doc:
    runs-on: ubuntu-latest
    needs:
      - Update-Doc
    if: ${{ always() }}
    steps:
      - name: Select Embed
        id: set_embed
        run: |
            if [[ ${{ needs.Update-Doc.result }} == "failure" ]]; then
                echo ::set-output name=json_var::'[ {"title": "üìÑ Update Doc Back:", "description": ":warning: @here Failure Update Doc [Go check](https://github.com/AirbornEIP/Back/actions) :warning:", "url": "https://github.com/AirbornEIP/Back/actions", "color": 16711711} ]'
            else
                echo ::set-output name=json_var::'[ {"title": "üìÑ Update Doc Back:", "description": ":white_check_mark: Nouvelle version de la Doc :white_check_mark:", "url":"https://github.com/AirbornEIP/Back/actions", "color":52000} ]'
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/790686267851014204/Ax5deRmrE7GsTxoligDL5zfvYowdtbB10tb3Iar7jmSxsRuUvvvePdgXZKwY14Pj8-v6
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}
      - name: Announce Message
        run: |
            if [[ ${{ needs.Update-Doc.result }} == "failure" ]]; then
              exit 1
            else
              exit 0
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/880365677813334017/zRTToF1MRDvQXWGlB2T1kxePkXj8-ZsKgzW34sG_VuWz8TVBtO5KEGRYekxXUtb9dB-I
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}


  Update-Prod:
    runs-on: ubuntu-latest
    needs:
      - Test-Unit
      - Build-App
      - Lint
      - Doc
    if: ${{ github.ref == 'refs/heads/prod' }}
    steps:
      - name: Updating App Back
        run: >
          curl http://20.199.97.36:14242/backVM/reboot -H "X-Authorization-Airborn: ${{ secrets.AUTH_TOKEN }}" -I -X GET --connect-timeout 300

  Notify-Prod:
    runs-on: ubuntu-latest
    needs:
      - Update-Prod
    if: ${{ always() && github.ref == 'refs/heads/prod'}}
    steps:
      - name: Select Embed
        id: set_embed
        run: |
            if [[ ${{ needs.Update-Prod.result }} == "failure" ]]; then
                echo ::set-output name=json_var::'[ {"title": "üõ∞Ô∏è Deployment Prod Back:", "description": ":warning: @here Failure Deployment Back [Go check](https://github.com/AirbornEIP/Back/actions) :warning:", "url": "https://github.com/AirbornEIP/Back/actions", "color": 16711711} ]'
            else
                echo ::set-output name=json_var::'[ {"title": "üõ∞Ô∏è Deployment Prod Back:", "description": ":white_check_mark: Deployment en cours... :white_check_mark:", "url":"https://github.com/AirbornEIP/Back/actions", "color":52000} ]'
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/790686267851014204/Ax5deRmrE7GsTxoligDL5zfvYowdtbB10tb3Iar7jmSxsRuUvvvePdgXZKwY14Pj8-v6
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}
      - name: Announce Message
        run: |
            if [[ ${{ needs.Update-Prod.result }} == "failure" ]]; then
              exit 1
            else
              exit 0
            fi
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
            DISCORD_WEBHOOK: https://discord.com/api/webhooks/880365677813334017/zRTToF1MRDvQXWGlB2T1kxePkXj8-ZsKgzW34sG_VuWz8TVBtO5KEGRYekxXUtb9dB-I
            DISCORD_EMBEDS: ${{ steps.set_embed.outputs.json_var }}
